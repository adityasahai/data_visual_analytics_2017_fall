-- initial commands
.headers off
.separator ','

-- (a) Import data
-- [insert sql statement(s) below]
DROP TABLE flights;
DROP TABLE airports;
DROP TABLE airlines;
CREATE TABLE flights(
    airline text,
    flight_number integer,
    origin_airport text,
    destination_airport text,
    departure_delay integer,
    distance integer,
    arrival_delay integer
    );
CREATE TABLE airports(
    airport_code text,
    airport integer,
    city text,
    state text,
    latitude real,
    longitude real
    );
CREATE TABLE airlines(
    airline_code text,
    airline text
    );
.mode csv
.import ./flights.csv flights
.import ./airlines.csv airlines
.import ./airports.csv airports

-- (b) Build indexes
-- [insert sql statement(s) below]
CREATE INDEX flights_airline_index ON flights(airline);
CREATE INDEX flights_origin_airport_index ON flights(origin_airport);
CREATE INDEX flights_destination_airport_index ON flights(destination_airport);
CREATE INDEX airport_airport_index ON airports(airport_code);
CREATE INDEX airlines_airline_index ON airlines(airline_code);

-- (c) Quick computations.
-- [insert sql statement(s) below]
SELECT COUNT(*) FROM flights WHERE destination_airport='SEA' AND arrival_delay > 20;
SELECT COUNT(*) FROM flights WHERE origin_airport='SFO' AND departure_delay > 20;

select '';

-- (d) Average delay of flights per airline 
-- [insert sql statement(s) below]
SELECT airlines.airline, AVG(flights.arrival_delay) AS average FROM
    flights JOIN airlines ON airlines.airline_code = flights.airline
    GROUP BY airlines.airline ORDER BY average DESC LIMIT 5;
select '';

-- (e) Airlines at each airport
-- [insert sql statement(s) below]

select distinct airports.airport, airlines.airline from
    flights join airports on flights.origin_airport = airports.airport_code
    join airlines on flights.airline = airlines.airline_code order by airports.airport, airlines.airline
    limit 30;
select '';

-- (f) Percentage of delayed flights
-- [insert sql statement(s) below]

select airports.airport, C.percent from
	(select A.destination_airport, (100.0 * B.count/A.count)
	as percent from (select destination_airport, count(*)
	as count from flights where arrival_delay > 30
	group by destination_airport) B
	join (select destination_airport, count(*) as count
	from flights group by destination_airport) A
	where A.destination_airport = B.destination_airport) C
	join airports on airports.airport_code = C.destination_airport
	order by airports.airport limit 20;

select '';

-- (g) Creating a view
-- [insert sql statement(s) below]

drop view airport_distances;
create view airport_distances as
select distinct * from (
select A.airport, B.airport, ABS(A.latitude - B.latitude) * ABS(A.latitude - B.latitude) 
    as distance
	from (select airport, latitude from airports order by airport) A
	join (select airport, latitude from airports) B
	where A.airport < B.airport order by distance DESC);
select * from airport_distances limit 10;

select '';

-- (h) Count total pairs 
-- [insert sql statement(s) below]
select count(*) from airport_distances;

select '';

-- (i) Create and import data into FTS table movie_overview.
-- [insert sql statement(s) below]
drop table movie_overview;
create virtual table movie_overview using fts3(id, name, year, overview, popularity);

.mode csv
.import ./movie-overview.txt movie_overview

-- (i) part 1
-- [insert sql statement(s) below]
select count(*) from movie_overview where overview like 'when%' or overview like 'When%';

select '';

-- (i) part 2
-- [insert sql statement(s) below]

select id from movie_overview where overview match 'love NEAR/7 hate';

